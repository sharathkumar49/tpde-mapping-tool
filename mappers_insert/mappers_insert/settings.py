"""
Django settings for mappers_insert project.

Generated by 'django-admin startproject' using Django 4.2.11.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv, find_dotenv
from standard.views import load_json
load_dotenv()
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
os.environ['DEV_NAME'] = os.path.join(BASE_DIR,"db.sqlite3")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-0f-az@%5d9ly3^h8^c2@0w^^5$cgxf6zhq(*f95ey$+z93ey+y"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "standard",
    "rest_framework",
    "django_filters",
    "masters",
    "batches",
    "reports",
    'drf_yasg'   
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "mappers_insert.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR,'template'),],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "mappers_insert.wsgi.application"

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
connection =  {
        "ENGINE": os.environ['DEV_ENGINE'],
        "NAME": os.environ['DEV_NAME'],
        "USER": os.environ['DEV_USER'],
        "PASSWORD": os.environ['DEV_PASSWORD'],
        "HOST": os.environ['DEV_HOST'],
        "PORT": os.environ['DEV_PORT'],
    }

if os.environ['ENVIRONMENT'] == "QA":
    connection = {
        "ENGINE": os.environ['QA_ENGINE'],
        "NAME": os.environ['QA_NAME'],
        "USER": os.environ['QA_USER'],
        "PASSWORD": os.environ['QA_PASSWORD'],
        "HOST": os.environ['QA_HOST'],
        "PORT": os.environ['QA_PORT'],

        "OPTIONS":{
            "driver": os.environ['QA_DRIVER']
        }}
elif os.environ['ENVIRONMENT'] == "PROD":
    connection = {
        "ENGINE": os.environ['PROD_ENGINE'],
        "NAME": os.environ['PROD_NAME'],
        "USER": os.environ['PROD_USER'],
        "PASSWORD": os.environ['PROD_PASSWORD'],
        "HOST": os.environ['PROD_HOST'],
        "PORT": os.environ['PROD_PORT'],

        "OPTIONS":{
            "driver": os.environ['PROD_DRIVER']
        }}
DATABASES = {
    "default": connection
}
DATABASE_CONNECTION_POOLING = False

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]
REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ]
}


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATIC_ROOT = os.path.join(BASE_DIR, "/static/")

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
STAFF_USERNAME = "staff_user"
STAFF_PASSWORD = "admin@123"

EMAIL_FROM = "vigneshwaran.manogaran@msci.com"
EMAIL_PASSWORD = "xbzG=Ddkw&Zk6M2"

load_json()

